version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./.docker/python/Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    container_name: flask_api
    environment:
      STRING_API: ${STRING_API}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - challange_network
    ports:
      - "5000"
  mysql:
    image: mysql:8.0
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: mysqladmin ping --user=${MYSQL_USER} --password=${MYSQL_PASSWORD}
      #test: mysql -u $MYSQL_USER -p$MYSQL_PASSWORD -e 'show databases'
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - challange_network
    ports:
      - "3306"
    # Volumes comentados para banco não persistir, caso necessário, descomentar
    #volumes:
    #  - mysql:/var/lib/mysql
  proxy:
    image: nginx:stable-alpine
    container_name: proxy
    restart: always
    depends_on:
      - app
    volumes:
      - ./.docker/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
    - challange_network
    ports:
      - "8080:80"


networks:
  challange_network:
    ipam:
      config:
        - subnet: 172.28.0.0/24

volumes:
  mysql:
    driver: local
